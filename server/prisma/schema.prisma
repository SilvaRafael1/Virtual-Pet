// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:123@localhost:5432/virtualpet?schema=prisma"
}

model Pet {
  id      Int    @id @default(autoincrement())
  name    String
  type    String
  race    String
  size    String
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId Int
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String
  password String
  role     String  @default("User")
  address  String  @default("")
  pets     Pet[]
  vendas   Venda[]
}

model Produto {
  id     Int            @id @default(autoincrement())
  name   String
  desc   String
  price  Float
  image  String
  vendas ProdutoVenda[]
}

model Services {
  id    Int    @id @default(autoincrement())
  name  String
  desc  String
  price Float
  image String
}

model Venda {
  id         Int            @id @default(autoincrement())
  produtos   ProdutoVenda[]
  user       User           @relation(fields: [userId], references: [id])
  userId     Int
  totalPrice Float
  createdAt  DateTime       @default(now())
}

model ProdutoVenda {
  id        Int     @id @default(autoincrement())
  produto   Produto @relation(fields: [produtoId], references: [id])
  produtoId Int
  venda     Venda   @relation(fields: [vendaId], references: [id])
  vendaId   Int
}
